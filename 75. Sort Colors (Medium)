    /*
https://leetcode.com/problems/sort-colors/
Given an array with n objects colored red, white or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

Note: You are not suppose to use the library's sort function for this problem.

Example:

Input: [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
    */
    
    void sortColors(vector<int>& nums) {
        int zeroIdx = 0;
        int twoIdx = nums.size()-1;
        
        for(int i=0; i<=twoIdx; i++){
            if(nums[i]==0){
                if(i!=zeroIdx){
                    swap(nums[i--], nums[zeroIdx]);
                }
                zeroIdx++;
            } else if(nums[i]==2){
                if(i!=twoIdx){
                    swap(nums[i--], nums[twoIdx]);
                }
                twoIdx--;
            }
        }
    }
    
    void swap(int& x, int& y ) {
        int temp = x;
        x = y;
        y = temp;
    }
 
