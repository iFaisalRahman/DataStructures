```
int searchLeft(vector<int>& nums, int target) {
    int low = 0;
    int hi = nums.size()-1;
    
    while(low<hi){
        int mid = (low+hi)/2;
        if(nums[mid]<target){
            low = mid+1;
        }else if (nums[mid]<target){
            hi = mid-1;
        }else{
            hi=mid;
        }
    }
    
    return nums[low]==target?low:-1;
}

int searchRight(vector<int>& nums, int target){
    int low = 0;
    int hi = nums.size()-1;
    while(low<hi){
        int mid = (low+hi)/2+1;
        if(nums[mid]>target){
            hi=mid-1;
        }else if(nums[mid]<target){
            low = mid+1;
        }else{
            low=mid;
        }
    }
    return nums[low]==target?low:-1;
}

vector<int> searchRange(vector<int>& nums, int target) {
    if(nums.size()==0){
        return {-1,-1};
    }
    int x = searchLeft(nums,target);
    if(x==-1){
        return {-1,-1};
    }
    int y = searchRight(nums,target);
    return {x,y};
    
}
```
